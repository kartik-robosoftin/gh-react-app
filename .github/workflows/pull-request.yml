name: Pull Request
on:
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize]
jobs:
  lint_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Check lint
        run: npm run lint
      - name: Unit test
        env:
          CI: true
        run: npm run test
      - name: Build app
        run: npm run build

  build_and_push_docker_img:
    needs: lint_and_build
    runs-on: ubuntu-latest
    if: ${{ github.base_ref == 'main' }}
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_USERNAME }}/gh-react-app:latest -t ${{ env.DOCKER_USERNAME }}/gh-react-app:$GITHUB_SHA .
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Push imgae to Dockerhub
        run: docker push ${{ env.DOCKER_USERNAME }}/gh-react-app:$GITHUB_SHA
      - name: Print output
        run: |
          echo "Deploying..."
          echo "URL => https://dev.example.com"
      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Dev URL: https://dev.example.com'
            })
