name: UAT release
on:
  push:
    branches:
      - "release/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build app
        uses: ./.github/actions/lint-and-build
        with:
          skip-lint: true
          skip-unit-test: true

  build_and_push_docker_img:
    needs: build
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - run: echo "PACKAGE_JSON=$(jq -c . < package.json)" >> $GITHUB_ENV
      - name: Get package.json version
        id: package
        run: echo 'VERSION=${{ fromJson(env.PACKAGE_JSON).version }}+${{ github.run_attempt }}' >> $GITHUB_OUTPUT
      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_USERNAME }}/gh-react-app:latest -t ${{ env.DOCKER_USERNAME }}/gh-react-app:${{ steps.package.outputs.VERSION }} .
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Push imgae to Dockerhub
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/gh-react-app:latest
          docker push ${{ env.DOCKER_USERNAME }}/gh-react-app:${{ steps.package.outputs.VERSION }}
      - name: Print output
        run: |
          echo "Deploying..."
          echo "URL => https://uat.example.com"
      - name: Add run summary
        run: echo -e '### Deployed Successfully!\n\nURL => https://uat.example.com\nDocker image version => ${{ steps.package.outputs.VERSION }}' >> $GITHUB_STEP_SUMMARY
